#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Westwind.WebToolkit
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DevSamples")]
	public partial class StockContext : Westwind.BusinessFramework.LinqToSql.DataContextSql
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStockCache(StockCache instance);
    partial void UpdateStockCache(StockCache instance);
    partial void DeleteStockCache(StockCache instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPortfolioItem(PortfolioItem instance);
    partial void UpdatePortfolioItem(PortfolioItem instance);
    partial void DeletePortfolioItem(PortfolioItem instance);
    partial void InsertUserToken(UserToken instance);
    partial void UpdateUserToken(UserToken instance);
    partial void DeleteUserToken(UserToken instance);
    partial void InsertStockSymbol(StockSymbol instance);
    partial void UpdateStockSymbol(StockSymbol instance);
    partial void DeleteStockSymbol(StockSymbol instance);
    #endregion
		
		public StockContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DevSampleConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StockContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StockCache> StockCaches
		{
			get
			{
				return this.GetTable<StockCache>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<PortfolioItem> PortfolioItems
		{
			get
			{
				return this.GetTable<PortfolioItem>();
			}
		}
		
		public System.Data.Linq.Table<UserToken> UserTokens
		{
			get
			{
				return this.GetTable<UserToken>();
			}
		}
		
		public System.Data.Linq.Table<StockSymbol> StockSymbols
		{
			get
			{
				return this.GetTable<StockSymbol>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockCache")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StockCache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pk;
		
		private string _Symbol;
		
		private string _Company;
		
		private decimal _LastPrice;
		
		private System.DateTime _QuoteTime;
		
		private decimal _OpenPrice;
		
		private decimal _NetChange;
		
		private System.Data.Linq.Binary _tstamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPkChanging(int value);
    partial void OnPkChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnLastPriceChanging(decimal value);
    partial void OnLastPriceChanged();
    partial void OnQuoteTimeChanging(System.DateTime value);
    partial void OnQuoteTimeChanged();
    partial void OnOpenPriceChanging(decimal value);
    partial void OnOpenPriceChanged();
    partial void OnNetChangeChanging(decimal value);
    partial void OnNetChangeChanged();
    partial void OntstampChanging(System.Data.Linq.Binary value);
    partial void OntstampChanged();
    #endregion
		
		public StockCache()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Pk
		{
			get
			{
				return this._Pk;
			}
			set
			{
				if ((this._Pk != value))
				{
					this.OnPkChanging(value);
					this.SendPropertyChanging();
					this._Pk = value;
					this.SendPropertyChanged("Pk");
					this.OnPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal LastPrice
		{
			get
			{
				return this._LastPrice;
			}
			set
			{
				if ((this._LastPrice != value))
				{
					this.OnLastPriceChanging(value);
					this.SendPropertyChanging();
					this._LastPrice = value;
					this.SendPropertyChanged("LastPrice");
					this.OnLastPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime QuoteTime
		{
			get
			{
				return this._QuoteTime;
			}
			set
			{
				if ((this._QuoteTime != value))
				{
					this.OnQuoteTimeChanging(value);
					this.SendPropertyChanging();
					this._QuoteTime = value;
					this.SendPropertyChanged("QuoteTime");
					this.OnQuoteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this.OnOpenPriceChanging(value);
					this.SendPropertyChanging();
					this._OpenPrice = value;
					this.SendPropertyChanged("OpenPrice");
					this.OnOpenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetChange", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public decimal NetChange
		{
			get
			{
				return this._NetChange;
			}
			set
			{
				if ((this._NetChange != value))
				{
					this.OnNetChangeChanging(value);
					this.SendPropertyChanging();
					this._NetChange = value;
					this.SendPropertyChanged("NetChange");
					this.OnNetChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Data.Linq.Binary tstamp
		{
			get
			{
				return this._tstamp;
			}
			set
			{
				if ((this._tstamp != value))
				{
					this.OntstampChanging(value);
					this.SendPropertyChanging();
					this._tstamp = value;
					this.SendPropertyChanged("tstamp");
					this.OntstampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pk;
		
		private string _Email;
		
		private string _Password;
		
		private string _FullName;
		
		private System.Data.Linq.Binary _tstamp;
		
		private EntitySet<PortfolioItem> _PortfolioItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPkChanging(int value);
    partial void OnPkChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OntstampChanging(System.Data.Linq.Binary value);
    partial void OntstampChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Pk
		{
			get
			{
				return this._Pk;
			}
			set
			{
				if ((this._Pk != value))
				{
					this.OnPkChanging(value);
					this.SendPropertyChanging();
					this._Pk = value;
					this.SendPropertyChanged("Pk");
					this.OnPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		protected internal string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Data.Linq.Binary tstamp
		{
			get
			{
				return this._tstamp;
			}
			set
			{
				if ((this._tstamp != value))
				{
					this.OntstampChanging(value);
					this.SendPropertyChanging();
					this._tstamp = value;
					this.SendPropertyChanged("tstamp");
					this.OntstampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PortfolioItem", Storage="_PortfolioItems", ThisKey="Pk", OtherKey="UserPk")]
		internal EntitySet<PortfolioItem> PortfolioItems
		{
			get
			{
				return this._PortfolioItems;
			}
			set
			{
				this._PortfolioItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PortfolioItems(PortfolioItem entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PortfolioItems(PortfolioItem entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._PortfolioItems = new EntitySet<PortfolioItem>(new Action<PortfolioItem>(this.attach_PortfolioItems), new Action<PortfolioItem>(this.detach_PortfolioItems));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortfolioItems")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PortfolioItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pk;
		
		private int _UserPk;
		
		private string _Symbol;
		
		private decimal _LastPrice;
		
		private System.DateTime _LastDate;
		
		private decimal _OpenPrice;
		
		private decimal _Change;
		
		private string _Company;
		
		private decimal _Qty;
		
		private decimal _ItemValue;
		
		private System.Data.Linq.Binary _tstamp;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPkChanging(int value);
    partial void OnPkChanged();
    partial void OnUserPkChanging(int value);
    partial void OnUserPkChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnLastPriceChanging(decimal value);
    partial void OnLastPriceChanged();
    partial void OnLastDateChanging(System.DateTime value);
    partial void OnLastDateChanged();
    partial void OnOpenPriceChanging(decimal value);
    partial void OnOpenPriceChanged();
    partial void OnChangeChanging(decimal value);
    partial void OnChangeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnQtyChanging(decimal value);
    partial void OnQtyChanged();
    partial void OnItemValueChanging(decimal value);
    partial void OnItemValueChanged();
    partial void OntstampChanging(System.Data.Linq.Binary value);
    partial void OntstampChanged();
    #endregion
		
		public PortfolioItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Pk
		{
			get
			{
				return this._Pk;
			}
			set
			{
				if ((this._Pk != value))
				{
					this.OnPkChanging(value);
					this.SendPropertyChanging();
					this._Pk = value;
					this.SendPropertyChanged("Pk");
					this.OnPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPk", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserPk
		{
			get
			{
				return this._UserPk;
			}
			set
			{
				if ((this._UserPk != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserPkChanging(value);
					this.SendPropertyChanging();
					this._UserPk = value;
					this.SendPropertyChanged("UserPk");
					this.OnUserPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal LastPrice
		{
			get
			{
				return this._LastPrice;
			}
			set
			{
				if ((this._LastPrice != value))
				{
					this.OnLastPriceChanging(value);
					this.SendPropertyChanging();
					this._LastPrice = value;
					this.SendPropertyChanged("LastPrice");
					this.OnLastPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this.OnOpenPriceChanging(value);
					this.SendPropertyChanging();
					this._OpenPrice = value;
					this.SendPropertyChanged("OpenPrice");
					this.OnOpenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Change", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public decimal Change
		{
			get
			{
				return this._Change;
			}
			set
			{
				if ((this._Change != value))
				{
					this.OnChangeChanging(value);
					this.SendPropertyChanging();
					this._Change = value;
					this.SendPropertyChanged("Change");
					this.OnChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public decimal Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemValue", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public decimal ItemValue
		{
			get
			{
				return this._ItemValue;
			}
			set
			{
				if ((this._ItemValue != value))
				{
					this.OnItemValueChanging(value);
					this.SendPropertyChanging();
					this._ItemValue = value;
					this.SendPropertyChanged("ItemValue");
					this.OnItemValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		internal System.Data.Linq.Binary tstamp
		{
			get
			{
				return this._tstamp;
			}
			set
			{
				if ((this._tstamp != value))
				{
					this.OntstampChanging(value);
					this.SendPropertyChanging();
					this._tstamp = value;
					this.SendPropertyChanged("tstamp");
					this.OntstampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PortfolioItem", Storage="_User", ThisKey="UserPk", OtherKey="Pk", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PortfolioItems.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PortfolioItems.Add(this);
						this._UserPk = value.Pk;
					}
					else
					{
						this._UserPk = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTokens")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Token;
		
		private int _UserPk;
		
		private System.DateTime _Entered;
		
		private System.DateTime _Expires;
		
		private int _Pk;
		
		private System.Data.Linq.Binary _tstamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnUserPkChanging(int value);
    partial void OnUserPkChanged();
    partial void OnEnteredChanging(System.DateTime value);
    partial void OnEnteredChanged();
    partial void OnExpiresChanging(System.DateTime value);
    partial void OnExpiresChanged();
    partial void OnPkChanging(int value);
    partial void OnPkChanged();
    partial void OntstampChanging(System.Data.Linq.Binary value);
    partial void OntstampChanged();
    #endregion
		
		public UserToken()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPk", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserPk
		{
			get
			{
				return this._UserPk;
			}
			set
			{
				if ((this._UserPk != value))
				{
					this.OnUserPkChanging(value);
					this.SendPropertyChanging();
					this._UserPk = value;
					this.SendPropertyChanged("UserPk");
					this.OnUserPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entered", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Entered
		{
			get
			{
				return this._Entered;
			}
			set
			{
				if ((this._Entered != value))
				{
					this.OnEnteredChanging(value);
					this.SendPropertyChanging();
					this._Entered = value;
					this.SendPropertyChanged("Entered");
					this.OnEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expires", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Expires
		{
			get
			{
				return this._Expires;
			}
			set
			{
				if ((this._Expires != value))
				{
					this.OnExpiresChanging(value);
					this.SendPropertyChanging();
					this._Expires = value;
					this.SendPropertyChanged("Expires");
					this.OnExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Pk
		{
			get
			{
				return this._Pk;
			}
			set
			{
				if ((this._Pk != value))
				{
					this.OnPkChanging(value);
					this.SendPropertyChanging();
					this._Pk = value;
					this.SendPropertyChanged("Pk");
					this.OnPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Data.Linq.Binary tstamp
		{
			get
			{
				return this._tstamp;
			}
			set
			{
				if ((this._tstamp != value))
				{
					this.OntstampChanging(value);
					this.SendPropertyChanging();
					this._tstamp = value;
					this.SendPropertyChanged("tstamp");
					this.OntstampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockSymbols")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StockSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Symbol;
		
		private string _Company;
		
		private int _Exchange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnExchangeChanging(int value);
    partial void OnExchangeChanged();
    #endregion
		
		public StockSymbol()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchange", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Exchange
		{
			get
			{
				return this._Exchange;
			}
			set
			{
				if ((this._Exchange != value))
				{
					this.OnExchangeChanging(value);
					this.SendPropertyChanging();
					this._Exchange = value;
					this.SendPropertyChanged("Exchange");
					this.OnExchangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
